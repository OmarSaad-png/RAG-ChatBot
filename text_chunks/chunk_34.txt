basis, though not on a step-by-step (online) basis. The term Monte Carlo generally refers to any method involvingrandom sampling; however, in this context, it specifically refers to methods that compute averages fromcompletereturns, rather thanpartialreturns.These methods function similarly to thebandit algorithms, in which returns are averaged for each state-action pair. The key difference is that actions taken in one state affect the returns of subsequent states within the same episode, making the problemnon-stationary. To address this non-stationarity, Monte Carlo methods use the framework of general policy iteration (GPI). While dynamic programming computesvalue functionsusing full knowledge of theMarkov decision process(MDP), Monte Carlo methods learn these functions through sample returns. The value functions and policies interact similarly to dynamic programming to achieveoptimality, first addressing the prediction problem and then extending to policy improvement and control, all based on sampled experience.[14]Temporal difference methods[edit]Main article:Temporal difference learningThe first problem is corrected by allowing the procedure to change the policy (at some or all states) before the values settle. This too may be problematic as it might prevent convergence. Most current algorithms do this, giving rise to the class ofgeneralized policy iterationalgorithms. Manyactor-criticmethods belong to this category.The second issue can be corrected by allowing